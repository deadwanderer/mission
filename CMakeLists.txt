#
# project: mission
#
cmake_minimum_required(VERSION 3.21)
project(mission VERSION 0.0.1)
configure_file(${CMAKE_SOURCE_DIR}/config.h.in src/config.h)

set(CMAKE_C_STANDARD 99)
if (CMAKE_SYSTEM_NAME STREQUAL "WindowsStore")
    set(CMAKE_CXX_STANDARD 17)
else()
    set(CMAKE_CXX_STANDARD 14)
endif()

# include the fips main cmake file
get_filename_component(FIPS_ROOT_DIR "../fips" ABSOLUTE)
include("${FIPS_ROOT_DIR}/cmake/fips.cmake")

fips_setup()
# fips_ide_group("Imports")

#  platform selection
add_definitions(-DSOKOL_NO_DEPRECATED)
if (FIPS_EMSCRIPTEN)
    if (FIPS_EMSCRIPTEN_USE_WEBGPU)
        set(sokol_backend SOKOL_WGPU)
        set(slang "wgsl")
    else()
        set(sokol_backend SOKOL_GLES3)
        set(slang "glsl300es")
    endif()
elseif (FIPS_ANDROID)
    set(sokol_backend SOKOL_GLES3)
    set(slang "glsl300es")
elseif (SOKOL_USE_D3D11)
    set(sokol_backend SOKOL_D3D11)
    set(slang "hlsl5")
elseif (SOKOL_USE_METAL)
    set(sokol_backend SOKOL_METAL)
    if (FIPS_IOS)
        set(slang "metal_ios:metal_sim")
    else()
        set(slang "metal_macos")
    endif()
elseif (SOKOL_USE_EGL_GLES3)
    set(sokol_backend SOKOL_GLES3)
    set(slang "glsl300es")
elseif (SOKOL_USE_EGL_GL)
    set(sokol_backend SOKOL_GLCORE)
    set(slang "glsl430")
else()
    if (FIPS_IOS)
        set(sokol_backend SOKOL_GLES3)
        set(slang "glsl300es")
    else()
        set(sokol_backend SOKOL_GLCORE)
        if (FIPS_MACOS)
            set(slang "glsl410")
        else()
            set(slang "glsl430")
        endif()
    endif()
endif()

include_directories(libs)
 add_subdirectory(libs)

 add_subdirectory(src)
